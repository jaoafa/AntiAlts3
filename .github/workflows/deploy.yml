name: Deploy

on:
  release:
    types:
      - created

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@v2.0.5
        id: deployment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.ref }}
          environment: "production"
          environment-url: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref }}

      - name: Update deployment status (in_progress)
        uses: chrnorm/deployment-status@v2.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          state: in_progress
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Deploy
        id: deployRequest
        uses: fjogeleit/http-request-action@master
        with:
          url: ${{ secrets.DEPLOY_URL }}
          method: 'POST'
          bearerToken: ${{ secrets.DEPLOY_KEY }}
          ignoreStatusCodes: '500'
          timeout: 600000

      - name: Show Response
        run: echo ${{ steps.deployRequest.outputs.response }}

      - name: Is Successful Deploy
        if: ${{ fromJson(steps.deployRequest.outputs.response).status == 'SUCCESSFUL' }}
        uses: chrnorm/deployment-status@v2.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          state: success
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: ${{ failure() || fromJson(steps.deployRequest.outputs.response).status == 'ERROR' }}
        uses: chrnorm/deployment-status@v2.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          state: failure
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
